{"version":3,"sources":["poll.js"],"names":[],"mappings":"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","file":"poll.js","sourcesContent":["import TrelloConnector from './connector';\nimport logger from '@hoist/logger';\nimport Moment from 'moment'\nimport errors from '@hoist/errors';\nimport config from 'config';\n\nvar ConnectorRequiresAuthorizationError = errors.create({\n  name: 'ConnectorRequiresAuthorizationError'\n});\n\n\nclass TrelloPoller {\n  constructor(context) {\n    this._logger = logger.child({\n      cls: this.constructor.name,\n      subscription: context.subscription._id,\n      application: context.application._id\n    });\n    this._context = context;\n    this._connector = new TrelloConnector(context.settings);\n  }\n  poll() {\n    return this.assertCanPoll()\n      .then((hooksSetup) => {\n        if (!hooksSetup) {\n          return this.setupHook();\n        }\n      }).catch((err) => {\n        this._logger.error(err);\n        if (!(err instanceof ConnectorRequiresAuthorizationError)) {\n          this._logger.alert(err);\n        }\n      });\n  }\n  assertCanPoll() {\n    var hooksSetup = this._context.subscription.get('setup');\n    return Promise.resolve()\n      .then(() => {\n        if (hooksSetup) {\n          //we've already setup this subscription\n          this._context.subscription.delayTill(new Moment().add(100, 'days').toDate());\n        }\n      })\n      .then(() => {\n        this._logger.info('checking credentials');\n        if (!(this._context.authorization)) {\n          this._logger.warn('Connector needs auth and no auth set');\n          //we've already setup this subscription\n          this._context.subscription.delayTill(new Moment().add(1, 'hour').toDate());\n          throw new ConnectorRequiresAuthorizationError();\n        }\n        if (!this._context.authorization.get('SubscriptionModelId')) {\n          this._logger.warn('Connector needs a subscription repository and none set');\n          //we've already setup this subscription\n          this._context.subscription.delayTill(new Moment().add(1, 'hour').toDate());\n          throw new ConnectorRequiresAuthorizationError();\n        }\n      }).then(() => {\n        return hooksSetup;\n      });\n  }\n  setupHook() {\n    return Promise.resolve()\n      .then(() => {\n        this._logger.info('setting connector authorization');\n        return this._connector.authorize(this._context.authorization);\n      }).then(() => {\n        this._logger.info('creating webhook endpoint');\n        let hookUri = `https://${config.get('Hoist.domains.endpoint')}/${this._context.organisation.slug}/${this._context.application.slug}/${this._context.connectorKey}-incoming`;\n        return this._connector.post(`/1/webhooks`, {\n          description: 'Hoist.io Endpoint',\n          callbackURL: hookUri,\n          idModel: this._context.authorization.get('SubscriptionModelId')\n        }).then((result) => {\n          this._logger.debug({\n            result\n          }, 'result recieved');\n        });\n      }).then(() => {\n        this._logger.info('webhooks created');\n        return this._context.subscription.set('setup', true);\n      });\n  }\n}\n\nexport default function (context) {\n  let poller = new TrelloPoller(context);\n  return poller.poll();\n};\n"],"sourceRoot":"/source/"}